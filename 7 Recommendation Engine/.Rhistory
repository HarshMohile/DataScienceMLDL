library(recommenderlab)
library(reshape2)
library(readxl)
library(ggplot2)
joke_rating <- read_excel(file.choose())
head(joke_rating)
joker <- joke_rating[2:4]
head(joker)
dim(joker)
class(joker)
View(joker)
View(joker)
joke_matrix <- as.matrix(acast(joker, user_id~joke_id, fun.aggregate = mean))
dim(joke_matrix)
hist(joke_matrix)
?getRatings
hist(getRatings(joke_matrix))
hist(getRatings(joke_matrix))
R <- as(joke_matrix, "realRatingMatrix")
rec1 = Recommender(R, method="UBCF")
rec1
View(joke_rating)
View(joke_rating)
jokes_final <- subset(joker, joker$user_id==userid)
print("You have rated these jokes :")
jokes_final
userid=23340
jokes_final <- subset(joker, joker$user_id==userid)
print("You have rated these jokes :")
jokes_final
print("recommendations for you:")
prediction <- predict(rec1, R[user_id], n=2) ## n= no of recommendation
as(prediction, "list")
print("recommendations for you:")
prediction <- predict(rec1, R[userid], n=2) ## n= no of recommendation
as(prediction, "list")
View(prediction)
View(prediction)
colMins(as.matrix(jokes_final[sapply(jokes_final, is.numeric)]))
min(joke_rating$Rating)
View(joke_rating)
View(joke_rating)
min(joke_rating)
min(joke_rating)
which(joke_rating$Rating== -10)
View(joke_rating)
View(joke_rating)
which(joke_rating$Rating==-10)
print("recommendations for you:")
prediction <- predict(rec1, R[userid], n=5) ## n= no of recommendation
as(prediction, "list")
userid=2898
jokes_final <- subset(joker, joker$user_id==userid)
print("You have rated these jokes :")
jokes_final
print("recommendations for you:")
prediction <- predict(rec1, R[userid], n=5) ## n= no of recommendation
as(prediction, "list")
min(joke_rating, na.rm=T)
min(joke_rating[2:,], na.rm=T)
min(joke_rating[2:,:], na.rm=T)
min(joke_rating[2:,], na.rm=T)
min(joke_rating[2,], na.rm=T)
min(joke_rating[2: 50000,:], na.rm=T)
min(joke_rating[2:50000,:], na.rm=T)
class(joke_rating)
which.min(joke_rating)
which.min(joke_rating)
joke_rating[which.max(joke_rating$Rating),]
#user with lowest rating given for joke
joke_rating[which.min(joke_rating$Rating),]
userid=18502
jokes_final <- subset(joker, joker$user_id==userid)
print("You have rated these jokes :")
jokes_final
print("recommendations for you:")
prediction <- predict(rec1, R[userid], n=5) ## n= no of recommendation
as(prediction, "list")
